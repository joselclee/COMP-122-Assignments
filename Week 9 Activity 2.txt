section .data

    name db 'Andre Lee'
    namelen equ $-name

    msg1 db '-:'
    len1 equ $-msg1

    star db '*'
    open db '['
    close db ']'
    newline db 10


section .bss

    char1 resb 1
    char2 resb 1
    skip resb 2
    num resb 1
    numTens resb 1
    tempNum resb 1
    tempTens resb 1
    
section .text
    global _start

_start:

    mov al, 0

    mov [num], al
    mov [numTens], al

check: 

    mov eax, 3
    mov ebx, 0
    mov ecx, char1
    mov edx, 1
    int 80h

    mov eax, 3
    mov ebx, 0
    mov ecx, char2
    mov edx, 1
    int 80h

    mov al, [char1]
    cmp al, byte '.'

    je end

    sub al, '0'
    mov [numTens], al

    mov al, [char2]
    sub al, '0'
    mov [num], al

    mov al, [num]
    mov [tempNum], al
    mov al, [numTens]
    mov [tempTens], al

    jmp print1

nextline:

    mov eax, 3
    mov ebx, 0
    mov ecx, skip
    mov edx, 2
    int 80h

    jmp check

checkTens:

    mov al, [tempTens]
    cmp al, byte 0
    
    je print2

    sub al, 1
    mov [tempTens], al

    mov al, byte 9
    mov [tempNum], al

    jmp printStar
    

printStar:

    mov eax, 4
    mov ebx, 1
    mov ecx, star
    mov edx, 1
    int 80h

    mov al, [tempNum]
    sub al, 1
    mov [tempNum], al
    cmp al, 0
    jle checkTens
    
    jmp printStar
    
print1:

    mov eax, 4
    mov ebx, 1
    mov ecx, msg1
    mov edx, len1
    int 80h

    jmp printStar

print2:

    mov eax, 4
    mov ebx, 1
    mov ecx, open
    mov edx, 1
    int 80h

    mov al, [num]
    add al, '0'
    mov [num], al

    mov al, [numTens]
    add al, '0'
    mov [numTens], al

    mov eax, 4
    mov ebx, 1
    mov ecx, numTens    
    mov edx, 1
    int 80h

    mov eax, 4
    mov ebx, 1
    mov ecx, num
    mov edx, 1
    int 80h

    mov eax, 4
    mov ebx, 1
    mov ecx, close
    mov edx, 1
    int 80h
    
    mov eax, 4
    mov ebx, 1
    mov ecx, newline
    mov edx, 1
    int 80h

    jmp nextline

end:

    mov eax, 1
    mov ebx, 0
    int 80h



