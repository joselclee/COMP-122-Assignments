section .data
    name db 'Andre Lee', 10
    namelen equ $-name

    msg1 db 'Upper case letters: '
    len1 equ $-msg1

    msg2 db 'Lower case letters: '
    len2 equ $-msg2

    msg3 db 'Digits: '
    len3 equ $-msg3

    newline db 10

section .bss   
    char resb 1
    hi resb 2
    lo resb 2
    nums resb 2

section .text
    global _start

_start:

    mov al, 0
    mov [hi], al
    mov [lo], al
    mov [nums], al

check:

    mov eax, 3
    mov ebx, 0
    mov ecx, char
    mov edx, 1
    int 80h

    cmp [char], byte '.'
    jz end

    cmp [char], byte 'a'
    jge countLower

    cmp [char], byte 'A'
    jge countUpper
    
    cmp [char], byte 0
    jge countNumber

    mov eax, 4
    mov ebx, 1
    mov ecx, char
    mov edx, 1
    int 80h

    jmp check

countUpper:

    mov al, [hi]
    add al, 1
    mov [hi], al
    
    jmp check

countLower:

    mov al, [lo]
    add al, 1
    mov [lo], al

    jmp check

countNumber:

    mov al, [nums]
    add al, 1
    mov [nums], al

    jmp check

end:
    
    mov al, [hi]
    add al, '0'
    mov [hi], al

    mov al, [lo]
    add al, '0'
    mov [lo], al

    mov al, [nums]
    add al, '0'
    mov [nums], al

    mov eax, 4
    mov ebx, 1
    mov ecx, msg1
    mov edx, len1
    int 80h

    mov eax, 4
    mov ebx, 1
    mov ecx, hi
    mov edx, 2
    int 80h

    mov eax, 4
    mov ebx, 1
    mov ecx, newline
    mov edx, 1
    int 80h

    mov eax, 4
    mov ebx, 1
    mov ecx, msg2
    mov edx, len2
    int 80h

    mov eax, 4
    mov ebx, 1
    mov ecx, lo
    mov edx, 2
    int 80h

    mov eax, 4
    mov ebx, 1
    mov ecx, newline
    mov edx, 1
    int 80h

    mov eax, 4
    mov ebx, 1
    mov ecx, msg3
    mov edx, len3
    int 80h

    mov eax, 4
    mov ebx, 1
    mov ecx, nums
    mov edx, 2
    int 80h

    mov eax, 4
    mov ebx, 1
    mov ecx, newline
    mov edx, 1
    int 80h

    mov eax, 1
    mov ebx, 0
    int 80h



