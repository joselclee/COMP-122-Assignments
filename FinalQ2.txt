section .data
    name db 'Andre Lee'
    namelen equ $-name
    
    colon db ':'
    newline db 10

section .bss
    char resb 1
    num resb 4

section .text
    global _start

_start:
    ;print my name
    mov eax, 4
    mov ebx, 1
    mov ecx, name
    mov edx, namelen
    int 80h

check:
    ; read a number from the input
    mov eax, 3
    mov ebx, 0
    mov ecx, num
    mov edx, 3
    int 80h

    cmp byte [char], '.'
    je end

    sub eax, eax
    add al, [char]
    call ascii

    ; print the character, colon and its ASCII decimal representation
    mov eax, 4
    mov ebx, 1
    mov ecx, char
    mov edx, 1
    int 80h

    mov eax, 4
    mov ebx, 1
    mov ecx, colon
    mov edx, 1
    int 80h

    mov eax, 4
    mov ebx, 1
    mov ecx, num
    mov edx, 4
    int 80h

    mov eax, 4
    mov ebx, 1
    mov ecx, newline
    mov edx, 1
    int 80h

    jmp check

end:
    mov eax, 1
    mov ebx, 0
    int 80h

ascii:
    ; convert the user input into ascii
    mov ecx, 10
    mov al, num + 3
    add al, 1

convert:
    sub edx, edx
    mov ecx, 10 ; ensure ecx is not zero before div instruction
    div ecx
    add dl, '0'
    dec al
    mov [al], dl
    or eax, eax
    jnz convert
    ret
    